@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Options
@using SafeExchange.Client.Web.Components.Helpers

@inject NavigationManager Navigation
@inject IOptionsSnapshot<RemoteAuthenticationOptions<ApiAuthorizationProviderOptions>> OptionsSnapshot

<AuthorizeView>
    <Authorized>
        <a class="nav-link" href="" @onclick:preventDefault id="userInfoDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <img src="signed-in.svg" alt="User Info" width="32">
        </a>
        <div class="dropdown-menu" aria-labelledby="userInfoDropdown">
            <form class="px-4 py-2">
                <div class="form-group mb-3">
                    <div>@context.User.Identity.Name</div>
                    <small>@TokenHandler.GetName(context.User)</small>
                </div>
                <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#settingsDialog"><i class="bi bi-gear"></i><span>&nbsp; Settings</span></button>
            </form>
            <div class="dropdown-divider"></div>
            <div class="px-4">
                <button class="nav-link btn btn-link" @onclick="BeginSignOut">Sign out</button>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <a class="nav-link" href="" @onclick="@BeginSignIn" @onclick:preventDefault>
            <img src="sign-in.svg" alt="Sign In" width="32">
        </a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private void BeginSignIn(MouseEventArgs args)
    {
        Navigation.NavigateToLogin(OptionsSnapshot.Get(Options.DefaultName).AuthenticationPaths.LogInPath);
    }

    private void BeginSignOut(MouseEventArgs args)
    {
        Navigation.NavigateToLogout(OptionsSnapshot.Get(Options.DefaultName).AuthenticationPaths.LogOutPath);
    }
}
