@using SafeExchange.Client.Web.Components.Model
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager NavManager
@inject ApiClient apiClient
@inject StateContainer StateContainer

<!-- Modal -->
<div class="modal fade" id="confirmationDialog" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Update configuration</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to update the configuration?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="SetConfigurationAsync">Yes</button>
            </div>
        </div>
    </div>
</div>

@if (this.IsInProgress)
{
    <p>
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100" style="width: 75%"></div>
        </div>
    </p>
}

@if (this.Notification != null)
{
    <div class="alert alert-dismissible @(this.Notification.GetAlertClass() ?? "alert-primary")" role="alert">
        <p>
            <strong>@(this.Notification.Status ?? string.Empty)</strong>&nbsp; @(this.Notification.Message ?? string.Empty)
        </p>
        @if (!string.IsNullOrEmpty(this.Notification.ButtonText))
        {
            <hr>
            <p>
                <button class="btn btn-warning" type="button" disabled="@IsInProgress" @onclick="() => this.NavManager.NavigateTo(this.Notification.ButtonUri)">
                    <span>@this.Notification.ButtonText</span>
                </button>
            </p>
        }
        <button type="button" class="close" @onclick="DismissNotification">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<h3>AdminConfiguration</h3>

@code {

    private NotificationData Notification;

    private bool IsInProgress;

    protected override async Task OnInitializedAsync()
    {
        this.StateContainer.TakeNotification();

        this.StateContainer.SetCurrentPageHeader($"Configuration Settings");

        await this.GetConfigurationAsync();
    }

    private async Task GetConfigurationAsync()
    {
        try
        {
            //...
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        finally
        {
            this.IsInProgress = false;
        }
    }

    private async Task SetConfigurationAsync()
    {
        this.IsInProgress = true;

        try
        {
            //...
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        finally
        {
            this.IsInProgress = false;
        }
    }

    public void DismissNotification()
    {
        this.Notification = null;
    }
}
